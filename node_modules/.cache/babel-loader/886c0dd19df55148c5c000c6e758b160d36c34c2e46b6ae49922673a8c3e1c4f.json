{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\CascadeProjects\\\\tp-simulator-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport TradingViewChart from './components/TradingViewChart';\nimport ChallengeSelector from './components/ChallengeSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n`;\n_c = Container;\nconst Title = styled.h1`\n  color: #333;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n_c2 = Title;\nconst Controls = styled.div`\n  margin: 20px 0;\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n`;\n_c3 = Controls;\nconst Input = styled.input`\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  width: 150px;\n  font-size: 16px;\n`;\n_c4 = Input;\nconst Button = styled.button`\n  padding: 8px 16px;\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  font-size: 16px;\n\n  &:hover {\n    background-color: #1976D2;\n  }\n`;\n_c5 = Button;\nconst Result = styled.div`\n  margin: 20px auto;\n  padding: 15px;\n  border-radius: 4px;\n  background-color: ${props => props.success ? '#e8f5e9' : '#ffebee'};\n  max-width: 600px;\n  text-align: center;\n  line-height: 1.5;\n`;\n_c6 = Result;\nconst generateCandlestickData = (n_days = 50, startPrice = 100) => {\n  const data = [];\n  let currentPrice = startPrice;\n  for (let i = 0; i < n_days; i++) {\n    const date = new Date();\n    date.setDate(date.getDate() - (n_days - i));\n    const change = (Math.random() - 0.5) * 4;\n    currentPrice += change;\n    const dailyVolatility = Math.abs(Math.random() - 0.5) * 2;\n    const openPrice = currentPrice + (Math.random() - 0.5) * dailyVolatility;\n    const highPrice = Math.max(openPrice, currentPrice) + Math.abs(Math.random()) * dailyVolatility;\n    const lowPrice = Math.min(openPrice, currentPrice) - Math.abs(Math.random()) * dailyVolatility;\n    data.push({\n      time: date.toISOString().split('T')[0],\n      open: Number(openPrice.toFixed(2)),\n      high: Number(highPrice.toFixed(2)),\n      low: Number(lowPrice.toFixed(2)),\n      close: Number(currentPrice.toFixed(2))\n    });\n  }\n  return data;\n};\nfunction App() {\n  _s();\n  const [allData, setAllData] = useState([]);\n  const [pastData, setPastData] = useState([]);\n  const [futureData, setFutureData] = useState([]);\n  const [tpValue, setTpValue] = useState(0);\n  const [result, setResult] = useState(null);\n  const [currentChallenge, setCurrentChallenge] = useState(1);\n  useEffect(() => {\n    const data = generateCandlestickData();\n    const midPoint = Math.floor(data.length / 2);\n    setAllData(data);\n    setPastData(data.slice(0, midPoint));\n    setFutureData(data.slice(midPoint));\n    setTpValue(data[midPoint].close);\n  }, []);\n  const handleChallengeChange = challenge => {\n    setCurrentChallenge(challenge);\n    setResult(null);\n    setTpValue(pastData[pastData.length - 1].close);\n  };\n  const handleTPSubmit = () => {\n    const maxPrice = Math.max(...futureData.map(d => d.high));\n    const entryPrice = futureData[0].open;\n    let hitDate = null;\n    let profit = 0;\n    for (const candle of futureData) {\n      if (candle.high >= tpValue) {\n        hitDate = candle.time;\n        profit = (tpValue - entryPrice) / entryPrice * 100;\n        break;\n      }\n    }\n    if (currentChallenge === 1) {\n      // Challenge 1: Check if TP is within 2 units of highest point\n      if (maxPrice - 2 <= tpValue && tpValue <= maxPrice) {\n        setResult({\n          success: true,\n          message: `Excellent! Your TP of $${tpValue.toFixed(2)} is within 2 units of the highest point ($${maxPrice.toFixed(2)})`\n        });\n      } else {\n        setResult({\n          success: false,\n          message: `Try again! Your TP should be between $${(maxPrice - 2).toFixed(2)} and $${maxPrice.toFixed(2)}`\n        });\n      }\n    } else {\n      // Challenge 2: Check if TP was hit\n      if (hitDate) {\n        const accuracy = (1 - Math.abs(maxPrice - tpValue) / maxPrice) * 100;\n        setResult({\n          success: true,\n          message: `Success! Your TP of $${tpValue.toFixed(2)} was reached on ${hitDate}\\n` + `Profit: ${profit.toFixed(1)}%\\n` + `Accuracy: ${accuracy.toFixed(1)}%`\n        });\n      } else {\n        setResult({\n          success: false,\n          message: `Your TP of $${tpValue.toFixed(2)} was not reached in the future period.\\n` + `The highest price was $${maxPrice.toFixed(2)}`\n        });\n      }\n    }\n  };\n  const handleTPLineMove = price => {\n    setTpValue(Number(price.toFixed(2)));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"TP Simulator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChallengeSelector, {\n      currentChallenge: currentChallenge,\n      onChallengeChange: handleChallengeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TradingViewChart, {\n      pastData: pastData,\n      futureData: futureData,\n      showFuture: currentChallenge === 1,\n      onTPLineMove: handleTPLineMove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        value: tpValue,\n        onChange: e => setTpValue(Number(e.target.value)),\n        step: \"0.01\",\n        placeholder: \"Enter TP value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleTPSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(Result, {\n      success: result.success,\n      children: result.message.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: line\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ChH6b+3uUOoJG+Z6hkc1GRjwLTA=\");\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Controls\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"Result\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useState","useEffect","styled","TradingViewChart","ChallengeSelector","jsxDEV","_jsxDEV","Container","div","_c","Title","h1","_c2","Controls","_c3","Input","input","_c4","Button","button","_c5","Result","props","success","_c6","generateCandlestickData","n_days","startPrice","data","currentPrice","i","date","Date","setDate","getDate","change","Math","random","dailyVolatility","abs","openPrice","highPrice","max","lowPrice","min","push","time","toISOString","split","open","Number","toFixed","high","low","close","App","_s","allData","setAllData","pastData","setPastData","futureData","setFutureData","tpValue","setTpValue","result","setResult","currentChallenge","setCurrentChallenge","midPoint","floor","length","slice","handleChallengeChange","challenge","handleTPSubmit","maxPrice","map","d","entryPrice","hitDate","profit","candle","message","accuracy","handleTPLineMove","price","children","fileName","_jsxFileName","lineNumber","columnNumber","onChallengeChange","showFuture","onTPLineMove","type","value","onChange","e","target","step","placeholder","onClick","line","_c7","$RefreshReg$"],"sources":["C:/Users/Daniel/CascadeProjects/tp-simulator-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport TradingViewChart from './components/TradingViewChart';\nimport ChallengeSelector from './components/ChallengeSelector';\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n`;\n\nconst Title = styled.h1`\n  color: #333;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nconst Controls = styled.div`\n  margin: 20px 0;\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n`;\n\nconst Input = styled.input`\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  width: 150px;\n  font-size: 16px;\n`;\n\nconst Button = styled.button`\n  padding: 8px 16px;\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  font-size: 16px;\n\n  &:hover {\n    background-color: #1976D2;\n  }\n`;\n\nconst Result = styled.div`\n  margin: 20px auto;\n  padding: 15px;\n  border-radius: 4px;\n  background-color: ${props => props.success ? '#e8f5e9' : '#ffebee'};\n  max-width: 600px;\n  text-align: center;\n  line-height: 1.5;\n`;\n\nconst generateCandlestickData = (n_days = 50, startPrice = 100) => {\n  const data = [];\n  let currentPrice = startPrice;\n  \n  for (let i = 0; i < n_days; i++) {\n    const date = new Date();\n    date.setDate(date.getDate() - (n_days - i));\n    \n    const change = (Math.random() - 0.5) * 4;\n    currentPrice += change;\n    \n    const dailyVolatility = Math.abs(Math.random() - 0.5) * 2;\n    const openPrice = currentPrice + (Math.random() - 0.5) * dailyVolatility;\n    const highPrice = Math.max(openPrice, currentPrice) + Math.abs(Math.random()) * dailyVolatility;\n    const lowPrice = Math.min(openPrice, currentPrice) - Math.abs(Math.random()) * dailyVolatility;\n    \n    data.push({\n      time: date.toISOString().split('T')[0],\n      open: Number(openPrice.toFixed(2)),\n      high: Number(highPrice.toFixed(2)),\n      low: Number(lowPrice.toFixed(2)),\n      close: Number(currentPrice.toFixed(2))\n    });\n  }\n  \n  return data;\n};\n\nfunction App() {\n  const [allData, setAllData] = useState([]);\n  const [pastData, setPastData] = useState([]);\n  const [futureData, setFutureData] = useState([]);\n  const [tpValue, setTpValue] = useState(0);\n  const [result, setResult] = useState(null);\n  const [currentChallenge, setCurrentChallenge] = useState(1);\n\n  useEffect(() => {\n    const data = generateCandlestickData();\n    const midPoint = Math.floor(data.length / 2);\n    \n    setAllData(data);\n    setPastData(data.slice(0, midPoint));\n    setFutureData(data.slice(midPoint));\n    setTpValue(data[midPoint].close);\n  }, []);\n\n  const handleChallengeChange = (challenge) => {\n    setCurrentChallenge(challenge);\n    setResult(null);\n    setTpValue(pastData[pastData.length - 1].close);\n  };\n\n  const handleTPSubmit = () => {\n    const maxPrice = Math.max(...futureData.map(d => d.high));\n    const entryPrice = futureData[0].open;\n    \n    let hitDate = null;\n    let profit = 0;\n    \n    for (const candle of futureData) {\n      if (candle.high >= tpValue) {\n        hitDate = candle.time;\n        profit = ((tpValue - entryPrice) / entryPrice) * 100;\n        break;\n      }\n    }\n\n    if (currentChallenge === 1) {\n      // Challenge 1: Check if TP is within 2 units of highest point\n      if (maxPrice - 2 <= tpValue && tpValue <= maxPrice) {\n        setResult({\n          success: true,\n          message: `Excellent! Your TP of $${tpValue.toFixed(2)} is within 2 units of the highest point ($${maxPrice.toFixed(2)})`\n        });\n      } else {\n        setResult({\n          success: false,\n          message: `Try again! Your TP should be between $${(maxPrice - 2).toFixed(2)} and $${maxPrice.toFixed(2)}`\n        });\n      }\n    } else {\n      // Challenge 2: Check if TP was hit\n      if (hitDate) {\n        const accuracy = (1 - Math.abs(maxPrice - tpValue) / maxPrice) * 100;\n        setResult({\n          success: true,\n          message: `Success! Your TP of $${tpValue.toFixed(2)} was reached on ${hitDate}\\n` +\n                  `Profit: ${profit.toFixed(1)}%\\n` +\n                  `Accuracy: ${accuracy.toFixed(1)}%`\n        });\n      } else {\n        setResult({\n          success: false,\n          message: `Your TP of $${tpValue.toFixed(2)} was not reached in the future period.\\n` +\n                  `The highest price was $${maxPrice.toFixed(2)}`\n        });\n      }\n    }\n  };\n\n  const handleTPLineMove = (price) => {\n    setTpValue(Number(price.toFixed(2)));\n  };\n\n  return (\n    <Container>\n      <Title>TP Simulator</Title>\n      \n      <ChallengeSelector \n        currentChallenge={currentChallenge}\n        onChallengeChange={handleChallengeChange}\n      />\n      \n      <TradingViewChart \n        pastData={pastData}\n        futureData={futureData}\n        showFuture={currentChallenge === 1}\n        onTPLineMove={handleTPLineMove}\n      />\n      \n      <Controls>\n        <Input\n          type=\"number\"\n          value={tpValue}\n          onChange={(e) => setTpValue(Number(e.target.value))}\n          step=\"0.01\"\n          placeholder=\"Enter TP value\"\n        />\n        <Button onClick={handleTPSubmit}>Submit</Button>\n      </Controls>\n      \n      {result && (\n        <Result success={result.success}>\n          {result.message.split('\\n').map((line, i) => (\n            <div key={i}>{line}</div>\n          ))}\n        </Result>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}