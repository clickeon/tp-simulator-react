{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\CascadeProjects\\\\tp-simulator-react\\\\src\\\\components\\\\TradingViewChart\\\\TradingViewChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n_c = ChartContainer;\nfunction TradingViewChart({\n  data,\n  containerHeight,\n  symbol = 'BTC/USD'\n}) {\n  _s();\n  const chartContainerRef = useRef(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n\n    // Create the chart\n    const chart = createChart(chartContainerRef.current, {\n      layout: {\n        background: {\n          color: '#121212'\n        },\n        textColor: '#d1d4dc'\n      },\n      grid: {\n        vertLines: {\n          color: 'rgba(42, 46, 57, 0.5)'\n        },\n        horzLines: {\n          color: 'rgba(42, 46, 57, 0.5)'\n        }\n      },\n      rightPriceScale: {\n        borderColor: 'rgba(197, 203, 206, 0.5)'\n      },\n      timeScale: {\n        borderColor: 'rgba(197, 203, 206, 0.5)',\n        timeVisible: true,\n        secondsVisible: false\n      },\n      crosshair: {\n        mode: 0\n      },\n      width: chartContainerRef.current.clientWidth,\n      height: containerHeight || 400\n    });\n\n    // Create the main series (candlesticks)\n    const mainSeries = chart.addCandlestickSeries({\n      upColor: '#26a69a',\n      downColor: '#ef5350',\n      borderVisible: false,\n      wickUpColor: '#26a69a',\n      wickDownColor: '#ef5350'\n    });\n\n    // Add the data\n    if (data && data.length > 0) {\n      mainSeries.setData(data);\n    } else {\n      // Generate sample data based on the symbol\n      const sampleData = generateSampleData(symbol);\n      mainSeries.setData(sampleData);\n    }\n\n    // Fit the chart content\n    chart.timeScale().fitContent();\n\n    // Handle resize\n    const handleResize = () => {\n      chart.applyOptions({\n        width: chartContainerRef.current.clientWidth\n      });\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      chart.remove();\n    };\n  }, [data, containerHeight, symbol]);\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    ref: chartContainerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n}\n\n// Helper function to generate sample data based on symbol\n_s(TradingViewChart, \"2rN9armGVJ1f+QeW0pB7tlSVqXQ=\");\n_c2 = TradingViewChart;\nfunction generateSampleData(symbol) {\n  const currentDate = new Date();\n  const data = [];\n\n  // Define base prices and volatility for different symbols\n  const symbolConfig = {\n    'BTC/USD': {\n      base: 52000,\n      volatility: 1000\n    },\n    'GOLD': {\n      base: 2024,\n      volatility: 10\n    },\n    'AAPL': {\n      base: 180,\n      volatility: 2\n    },\n    'OIL': {\n      base: 78,\n      volatility: 1\n    },\n    'EUR/USD': {\n      base: 1.0845,\n      volatility: 0.002\n    },\n    'NATGAS': {\n      base: 1.642,\n      volatility: 0.05\n    },\n    'XAU/USD': {\n      base: 2024,\n      volatility: 10\n    },\n    'CL/USD': {\n      base: 78,\n      volatility: 1\n    },\n    'NG/USD': {\n      base: 1.642,\n      volatility: 0.05\n    }\n  };\n  const config = symbolConfig[symbol] || {\n    base: 100,\n    volatility: 2\n  };\n  let basePrice = config.base;\n  for (let i = 0; i < 100; i++) {\n    const time = new Date(currentDate);\n    time.setMinutes(time.getMinutes() - i);\n    const volatility = config.volatility;\n    const open = basePrice + (Math.random() - 0.5) * volatility;\n    const high = open + Math.random() * volatility;\n    const low = open - Math.random() * volatility;\n    const close = (high + low) / 2;\n    basePrice = close;\n    data.unshift({\n      time: time.getTime() / 1000,\n      open,\n      high,\n      low,\n      close\n    });\n  }\n  return data;\n}\nexport default TradingViewChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChartContainer\");\n$RefreshReg$(_c2, \"TradingViewChart\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","styled","jsxDEV","_jsxDEV","ChartContainer","div","_c","TradingViewChart","data","containerHeight","symbol","_s","chartContainerRef","chartRef","current","chart","layout","background","color","textColor","grid","vertLines","horzLines","rightPriceScale","borderColor","timeScale","timeVisible","secondsVisible","crosshair","mode","width","clientWidth","height","mainSeries","addCandlestickSeries","upColor","downColor","borderVisible","wickUpColor","wickDownColor","length","setData","sampleData","generateSampleData","fitContent","handleResize","applyOptions","window","addEventListener","removeEventListener","remove","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","currentDate","Date","symbolConfig","base","volatility","config","basePrice","i","time","setMinutes","getMinutes","open","Math","random","high","low","close","unshift","getTime","$RefreshReg$"],"sources":["C:/Users/Daniel/CascadeProjects/tp-simulator-react/src/components/TradingViewChart/TradingViewChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport styled from 'styled-components';\n\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nfunction TradingViewChart({ data, containerHeight, symbol = 'BTC/USD' }) {\n  const chartContainerRef = useRef(null);\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n\n    // Create the chart\n    const chart = createChart(chartContainerRef.current, {\n      layout: {\n        background: { color: '#121212' },\n        textColor: '#d1d4dc',\n      },\n      grid: {\n        vertLines: { color: 'rgba(42, 46, 57, 0.5)' },\n        horzLines: { color: 'rgba(42, 46, 57, 0.5)' },\n      },\n      rightPriceScale: {\n        borderColor: 'rgba(197, 203, 206, 0.5)',\n      },\n      timeScale: {\n        borderColor: 'rgba(197, 203, 206, 0.5)',\n        timeVisible: true,\n        secondsVisible: false,\n      },\n      crosshair: {\n        mode: 0,\n      },\n      width: chartContainerRef.current.clientWidth,\n      height: containerHeight || 400,\n    });\n\n    // Create the main series (candlesticks)\n    const mainSeries = chart.addCandlestickSeries({\n      upColor: '#26a69a',\n      downColor: '#ef5350',\n      borderVisible: false,\n      wickUpColor: '#26a69a',\n      wickDownColor: '#ef5350',\n    });\n\n    // Add the data\n    if (data && data.length > 0) {\n      mainSeries.setData(data);\n    } else {\n      // Generate sample data based on the symbol\n      const sampleData = generateSampleData(symbol);\n      mainSeries.setData(sampleData);\n    }\n\n    // Fit the chart content\n    chart.timeScale().fitContent();\n\n    // Handle resize\n    const handleResize = () => {\n      chart.applyOptions({\n        width: chartContainerRef.current.clientWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      chart.remove();\n    };\n  }, [data, containerHeight, symbol]);\n\n  return <ChartContainer ref={chartContainerRef} />;\n}\n\n// Helper function to generate sample data based on symbol\nfunction generateSampleData(symbol) {\n  const currentDate = new Date();\n  const data = [];\n  \n  // Define base prices and volatility for different symbols\n  const symbolConfig = {\n    'BTC/USD': { base: 52000, volatility: 1000 },\n    'GOLD': { base: 2024, volatility: 10 },\n    'AAPL': { base: 180, volatility: 2 },\n    'OIL': { base: 78, volatility: 1 },\n    'EUR/USD': { base: 1.0845, volatility: 0.002 },\n    'NATGAS': { base: 1.642, volatility: 0.05 },\n    'XAU/USD': { base: 2024, volatility: 10 },\n    'CL/USD': { base: 78, volatility: 1 },\n    'NG/USD': { base: 1.642, volatility: 0.05 }\n  };\n\n  const config = symbolConfig[symbol] || { base: 100, volatility: 2 };\n  let basePrice = config.base;\n\n  for (let i = 0; i < 100; i++) {\n    const time = new Date(currentDate);\n    time.setMinutes(time.getMinutes() - i);\n\n    const volatility = config.volatility;\n    const open = basePrice + (Math.random() - 0.5) * volatility;\n    const high = open + Math.random() * volatility;\n    const low = open - Math.random() * volatility;\n    const close = (high + low) / 2;\n\n    basePrice = close;\n\n    data.unshift({\n      time: time.getTime() / 1000,\n      open,\n      high,\n      low,\n      close,\n    });\n  }\n\n  return data;\n}\n\nexport default TradingViewChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}